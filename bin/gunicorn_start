#!/bin/bash

#Timout for Gunicorn Response
TIMEOUT=5
#REQUEST LINE LIMIT
LINE_LIMIT=0
# Name of the application
NAME="skin_and_you"
# Django project directory
DJANGODIR=/var/www/skin_and_you
# we will communicte using this unix socket
#SOCKFILE=/root/public_html/icogz-base-code/app.sock
SOCKFILE=/tmp/app.sock
# the user to run as
USER=root
# the group to run as
GROUP=root
# how many worker processes should Gunicorn spawn
NUM_WORKERS=3
THREADS=3
# which settings file should Django use
DJANGO_SETTINGS_MODULE=skin_and_you.settings
# WSGI module name
DJANGO_WSGI_MODULE=skin_and_you.wsgi
echo "Starting $NAME as `whoami`"
# Activate the virtual environment
cd $DJANGODIR
source /var/www/python_env/skin_and_you/bin/activate
export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
export PYTHONPATH=$DJANGODIR:$PYTHONPATH
# Create the run directory if it doesn't exist
RUNDIR=$(dirname $SOCKFILE)
test -d $RUNDIR || mkdir -p $RUNDIR
# Start your Django Unicorn
# Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)
exec /var/www/python_env/skin_and_you/bin/gunicorn ${DJANGO_WSGI_MODULE}:application \
--name $NAME \
--timeout $TIMEOUT \
--limit-request-line $LINE_LIMIT \
--workers $NUM_WORKERS \
--threads $THREADS \
--worker-class=gthread \
--worker-connections=1000 \
--user=$USER --group=$GROUP \
--bind=unix:$SOCKFILE \
--log-level=critical \
--max-requests-jitter 1 \
--keep-alive 30 \
--log-file=-
